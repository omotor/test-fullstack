!function(){"use strict";angular.module("test").controller("AppController",["$scope","$state",function(o,t){console.log("appController: "+t)}])}();
!function(){"use strict";angular.module("test").config(["$stateProvider",function(r){console.log("routing ..."),r.state("user-list",{url:"/user",templateUrl:"app/views/users.html",controller:"UserListController",controllerAs:"vm"}),r.state("user-add",{url:"/user/add",templateUrl:"app/views/user.html",controller:"UserFormController",controllerAs:"vm"}),r.state("user-edit",{url:"/user/:id",templateUrl:"app/views/user.html",controller:"UserFormController",controllerAs:"vm"}),r.state("app",{url:"/home",templateUrl:"app/app-template.html",controller:"AppController"})}])}();
!function(){angular.module("test").controller("UserFormController",["UserService","$scope","$state","$stateParams",function(e,r,s,o){function t(){return a.user.id?e.updateUser(a.user.id,a.user):(console.log("user: "+a.user+", vm.user.name: "+a.user.name),e.createUser(a.user))}console.log("userFormController ...");var a=this;if(a.saveOrUpdate=!1,a.user={},o.id){var n=o.id;e.getUser(n).then(function(e){a.user=e.data},function(e){console.log(e),r.errorMessage=e}).catch(function(e){r.errorMessage="Error at trying to get user",console.log(e)})}a.saveUser=function(){a.saveOrUpdate=!0,t().then(function(e){r.message="User saved with success.",s.go("user-list"),a.saveOrUpdate=!1},function(e){console.log(e),r.errorMessage=e}).catch(function(e){e.data&&(r.errorMessage="",angular.forEach(e.data,function(e,s){r.errorMessage+=e.message})),a.saveOrUpdate=!1,console.log(e)})}}])}();
!function(){"use strict";angular.module("test").controller("UserListController",["$scope","UserService",function(e,o){console.log("userListController ...");var s=this;s.users=[],s.remove=function(r,n){console.log(r),o.deleteUser(r.id).then(function(o){e.message="User has been removed.",console.log(e.message),s.users.splice(n,1)},function(o){console.log(o),e.errorMessage=o})},o.getUsers().then(function(e){console.log("getUsers: "),console.log(e),s.users=e.data}).catch(function(o){e.errorMessage="Error at trying get users",console.log(o)})}])}();
!function(){angular.module("test").config(["$httpProvider",function(e){console.log("Adding interceptor"),e.interceptors.push(function(){return{request:function(e){return e.headers=e.headers||{},e.headers["Cache-Control"]="no-cache",e.headers.Pragma="no-cache",e.headers["If-Modified-Since"]="Mon, 26 Jul 1997 05:00:00 GMT",e}}})}])}();
!function(){"use strict";angular.module("test").service("UserService",["$http",function(e){var t="http://localhost:5000/api/user/";console.log("userService ..."),this.getUsers=function(){return e.get(t)},this.getUser=function(n){return e.get(t+n)},this.createUser=function(n){return console.log("Creating user: "+n),e.post(t,{name:n.name,email:n.email,telephone:n.telephone,sex:n.sex})},this.updateUser=function(n,r){return e.put(t+n,{name:r.name,email:r.email,telephone:r.telephone,sex:r.sex})},this.deleteUser=function(n){return e.delete(t+n)}}])}();