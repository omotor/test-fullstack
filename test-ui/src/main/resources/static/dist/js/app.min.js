!function(){"use strict";angular.module("test",["ui.router","ngResource","angular-ladda","ui.utils.masks","idf.br-filters","angular-growl"]).config(["$urlRouterProvider","$stateProvider",function(r,t){r.otherwise("/user/")}]).run(["$rootScope","$state",function(r,t){}])}();
!function(){"use strict";angular.module("test").constant("Global",{urlBase:"http://localhost:5000/api/"})}();
!function(){"use strict";angular.module("test").config(["$stateProvider",function(e){e.state("user-list",{url:"/user/",templateUrl:"/app/views/list-user.html",controller:"UserController"}),e.state("user-add",{url:"/user/add/",templateUrl:"/app/views/form-user.html",controller:"UserFormController"}),e.state("user-edit",{url:"/user/:id",templateUrl:"/app/views/form-user.html",controller:"UserFormController"}),e.state("app",{url:"/home",templateUrl:"/app/templates/app-template.html",controller:"AppController"})}])}();
!function(){"use strict";angular.module("test").config(["growlProvider",function(e){e.globalDisableCloseButton(!0),e.globalTimeToLive({success:3e3,error:5e3,warning:5e3,info:6e3})}])}();
!function(){"use strict";function r(r){r.interceptors.push(["$injector",function(r){var e=r.get("growl"),t=r.get("$q");return{request:function(r){return r.headers=r.headers||{},r.headers["Cache-Control"]="no-cache",r.headers.Pragma="no-cache",r.headers["If-Modified-Since"]="Mon, 26 Jul 1997 05:00:00 GMT",r},responseError:function(r){var o=r.status;return-1==o?void e.error("Server offline.",{title:"Error"}):500==o?void e.error("Server error.",{title:"Error"}):t.reject(r)}}}])}angular.module("test").config(r),r.$inject=["$httpProvider"]}();
!function(){"use strict";function e(e,r){return e(r.urlBase+"user/:id",{id:"@_id"},{query:{isArray:!0},update:{method:"PUT"}})}angular.module("test").factory("UserService",e),e.$inject=["$resource","Global"]}();
!function(){"use strict";angular.module("test").controller("AppController",["$scope","$state",function(t,o){}])}();
!function(){"use strict";function e(e,s,r){function t(e,t){var o={id:e.id};s.delete(o).$promise.then(function(e){r.success("User has been successfully removed."),n.userList.splice(t,1)})}var n=this;n.userList=[],n.remove=t,s.query().$promise.then(function(e){n.userList=e}).catch(function(e){console.log(e)})}angular.module("test").controller("UserController",e),e.$inject=["$scope","UserService","growl"]}();
!function(){"use strict";function e(e,r,s,t,a){function n(){u.saveOrUpdate=!0,o().then(function(e){a.success("User saved successfully."),r.go("user-list"),u.saveOrUpdate=!1}).catch(function(e){e.data&&angular.forEach(e.data,function(e,r){a.error(e.message)}),u.saveOrUpdate=!1,console.log(e)})}function o(){if(u.user.id){var e={id:u.user.id};return s.update(e,u.user).$promise}return s.save(u.user).$promise}var u=this;if(u.saveOrUpdate=!1,u.user={},u.save=n,t.id){var c={id:t.id};s.get(c).$promise.then(function(e){u.user=e}).catch(function(e){console.log(e)})}}angular.module("test").controller("UserFormController",e),e.$inject=["$scope","$state","UserService","$stateParams","growl"]}();